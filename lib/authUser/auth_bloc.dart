import 'dart:convert';
import 'package:auth_register/authUser/res_model.dart';
import 'package:bloc/bloc.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:http/http.dart' as http;

import 'auth_event.dart';
import 'auth_state.dart';

class AuthBloc extends Bloc<AuthEvent, LoginState> {
  AuthBloc() : super(LoginState()) {
    on<NameChanged>(_onNameChanged);
    on<EmailChanged>(_onEmailChanged);
    on<MobileChanged>(_onMobileChanged);
    on<PasswordChanged>(_onPasswordChanged);
    on<ConfirmPasswordChanged>(_onConfirmPasswordChanged);
    on<TutorTypeChanged>(_onTutorTypeChanged);
    on<LoginApi>(_onLoginApi);

    // on<AuthEvent>((event, emit) {
    //   on<EmailChanged>(_onEmailChanged);
    //   on<PasswordChanged>(_onPasswordChanged);
    //   on<LoginApi>(_onLoginApi);
    // });
  }

  void _onNameChanged(NameChanged event, Emitter<LoginState> emit) {
    emit(
      state.copyWith(
        name: event.name,
      ),
    );
  }

  void _onEmailChanged(EmailChanged event, Emitter<LoginState> emit) {
    emit(
      state.copyWith(
        email: event.email,
      ),
    );
  }

  void _onMobileChanged(MobileChanged event, Emitter<LoginState> emit) {
    emit(
      state.copyWith(
        mobile: event.mobile,
      ),
    );
  }

  void _onPasswordChanged(PasswordChanged event, Emitter<LoginState> emit) {
    emit(
      state.copyWith(
        password: event.password,
      ),
    );
  }

  void _onConfirmPasswordChanged(
      ConfirmPasswordChanged event, Emitter<LoginState> emit) {
    emit(
      state.copyWith(
        confirmPassword: event.confirmPassword,
      ),
    );
  }

  void _onTutorTypeChanged(TutorTypeChanged event, Emitter<LoginState> emit) {
    emit(
      state.copyWith(
        tutorType: event.tutorType,
      ),
    );
  }

  void _onLoginApi(LoginApi event, Emitter<LoginState> emit) async {
    emit(
      state.copyWith(
        loginStatus: LoginStatus.loading,
      ),
    );

    //---------------------------
    //
    //     final String apiUrl = 'https://api.softpark.xyz/api/register';
    //
    //     final response = await http.post(
    //       Uri.parse(apiUrl),
    //       body: jsonEncode({
    //         'name': state.name,
    //         'email': state.email,
    //         'mobile':state.mobile,
    //         'password':state.password,
    //         'confirmPassword': state.confirmPassword,
    //         'tutorType': state.tutorType,
    //       }),
    //      // headers: {'Content-Type': 'application/json'},
    //     );
    //     var resData = jsonDecode(response.body);
    //     if (response.statusCode == 201) {
    //       print('Registration Successful!');
    //       print(response.body);
    //       emit(
    //         state.copyWith(
    //           loginStatus: LoginStatus.success,
    //           // message: "Login successful",
    //           message: resData['message'],
    //           //message: jsonData['message'],
    //
    //         ),
    //       );
    //
    //     } else {
    //       print('Registration Failed');
    //       print(response.statusCode);
    //       print(response.body);
    //
    //       emit(
    //         state.copyWith(
    //           loginStatus: LoginStatus.error,
    //           message: resData['errors'],
    //           // message: jsonData['errors'],
    //
    //         ),
    //       );
    //     }
    //  // }

    //---------------------------

    //Map data = {'name': state.name,'email': state.email, 'mobile': state.mobile, 'password': state.password, 'confirmPassword': state.confirmPassword, 'tutorType': state.tutorType};
    Map<String, dynamic> data = {
      'name': state.name,
      'email': state.email,
      'mobile': state.mobile,
      'password': state.password,
      'confirmPassword': state.confirmPassword,
      'tutorType': state.tutorType
    };
    print("Before Post....: " + (data.toString()));
    try {
      final response =
          //await http.post(Uri.parse('https://reqres.in/api/login'), body: data); //
          await http.post(Uri.parse('https://api.besttutor.xyz/api/register'),
              body: data);
      // https://api.besttutor.xyz/api/register ---// --- https://api.softpark.xyz/api/register
      //var resData = jsonDecode(response.body);
      Map<String, dynamic> map = jsonDecode(response.body);
      Autogenerated person = Autogenerated.fromJson(map);

      print("Auth Response Data......: " + person.toString());
      //print("Auth Response Data......: " + person.errors!.email.toString());

      if (response.statusCode == 201) {
        print("Auth Success Response Data......: " + person.message.toString());
        emit(
          state.copyWith(
            loginStatus: LoginStatus.success,
            // message: "Login successful",
            //message: resData['message'],
            message: person.message.toString(),
          ),
        );
      } else {
        print("Auth Error Response Data......: " + person.errors.toString());
        emit(
          state.copyWith(
            loginStatus: LoginStatus.error,
            //message: resData['errors'],
            message: person.errors!.email.toString() +
                " , " +
                person.errors!.mobile.toString(),
          ),
        );
      }
    } catch (e) {
      emit(
        state.copyWith(
          loginStatus: LoginStatus.error,
          message: e.toString(),
        ),
      );
    }
  }
}
